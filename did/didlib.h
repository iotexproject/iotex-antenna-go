/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/iotexproject/iotex-antenna-go/v2/did */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */




/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


/* Return type for CeateDID */
struct CeateDID_return {
	char* r0;
	GoUint64 r1;
	char* r2;
};

//CeateDID returns transaction hash,transaction if success,error message

extern struct CeateDID_return CeateDID(GoString p0, GoString p1, GoString p2, GoString p3, GoString p4, GoUint64 p5, GoString p6, GoString p7, GoString p8);

/* Return type for DeleteDID */
struct DeleteDID_return {
	char* r0;
	GoUint64 r1;
	char* r2;
};

//DeleteDID returns transaction hash,transaction if success,error message

extern struct DeleteDID_return DeleteDID(GoString p0, GoString p1, GoString p2, GoString p3, GoString p4, GoUint64 p5, GoString p6);

/* Return type for UpdateHash */
struct UpdateHash_return {
	char* r0;
	GoUint64 r1;
	char* r2;
};

//UpdateHash returns transaction hash,transaction if success,error message

extern struct UpdateHash_return UpdateHash(GoString p0, GoString p1, GoString p2, GoString p3, GoString p4, GoUint64 p5, GoString p6, GoString p7);

/* Return type for UpdateUri */
struct UpdateUri_return {
	char* r0;
	GoUint64 r1;
	char* r2;
};

//UpdateUri returns transaction hash,transaction if success,error message

extern struct UpdateUri_return UpdateUri(GoString p0, GoString p1, GoString p2, GoString p3, GoString p4, GoUint64 p5, GoString p6, GoString p7);

/* Return type for GetHash */
struct GetHash_return {
	char* r0;
	GoUint64 r1;
	char* r2;
};

//GetHash returns did hash,transaction if success,error message

extern struct GetHash_return GetHash(GoString p0, GoString p1, GoString p2, GoString p3);

/* Return type for GetUri */
struct GetUri_return {
	char* r0;
	GoUint64 r1;
	char* r2;
};

//GetUri returns did uri,transaction if success,error message

extern struct GetUri_return GetUri(GoString p0, GoString p1, GoString p2, GoString p3);

#ifdef __cplusplus
}
#endif
